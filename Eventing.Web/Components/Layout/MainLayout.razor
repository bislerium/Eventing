@inherits LayoutComponentBase
@layout RootLayout

<MudLayout>
    <MudAppBar Elevation="ThemeManager.AppBarElevation">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
                       OnClick="@ToggleDarkMode"/>
        <MudText Typo="Typo.h5" Class="ml-3">Application</MudText>
        <MudSpacer/>
        <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@ToggleDarkMode"/>
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End"/>

        <MudThemeManagerButton OnClick="@(_ => OpenThemeManager(true))"/>
        <MudThemeManager Open="_themeManagerOpen" OpenChanged="OpenThemeManager" Theme="ThemeManager"
                         ThemeChanged="UpdateTheme"/>
    </MudAppBar>
    <MudDrawer id="nav-drawer" @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent Class="pt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _drawerOpen = true;

    [CascadingParameter(Name = "IsDarkMode")]
    public bool IsDarkMode { get; set; }

    [CascadingParameter(Name = "ToggleDarkMode")]
    public Action ToggleDarkMode { get; set; } = null!;

    [CascadingParameter] public ThemeManagerTheme ThemeManager { get; set; } = null!;

    [CascadingParameter] public Action<ThemeManagerTheme> UpdateTheme { get; set; } = null!;

    private string DarkLightModeButtonIcon => IsDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };

    private bool _themeManagerOpen;

    void OpenThemeManager(bool value) => _themeManagerOpen = value;
}