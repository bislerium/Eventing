@using Eventing.Web.Ui.Features.Attendee.Enums
<MudDialog Style="max-height: 50vh;">
    <DialogContent>
        @if (_isLoading)
        {
            <MudProgressLinear Indeterminate="true"/>
        }
        else
        {
            var totalAttendees = Attendees.Count();
            @if (totalAttendees == 0)
            {
                <MudText>No attendees</MudText>
            }
            else
            {
                <div class="d-flex flex-column gap-1 my-1">

                    @foreach (var (i, a) in Attendees.Index())
                    {
                        var hasComment = !string.IsNullOrEmpty(a.Comment);

                        <MudPaper Class="pa-2" Elevation="0">
                            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                                <MudStack Row="true" AlignItems="AlignItems.Center">
                                    <MudAvatar Size="Size.Medium"
                                               Color="@(a.IsOrganizer ? Color.Primary : Color.Secondary)">
                                        @Utils.GetInitials(a.Responder.Name)
                                    </MudAvatar>
                                    <MudStack Row="false"
                                              AlignItems="AlignItems.Start"
                                              Spacing="0">
                                        <MudText> @a.Responder.Name </MudText>
                                        @if (a.RespondedAt.HasValue)
                                        {
                                            var isUpdatedResponse = a.UpdatedAt.HasValue;
                                            var respondedAt = a.UpdatedAt ?? a.RespondedAt.Value;

                                            <MudBadge Dot="true"
                                                      Color="Color.Info"
                                                      Origin="Origin.CenterRight"
                                                      Visible="@isUpdatedResponse"
                                                      BadgeAriaLabel="Update"
                                                      BadgeClass="ms-2">
                                                <MudText Typo="Typo.caption">
                                                    @respondedAt.ToString(Constants.Format.DateTime.MonthDayYearHourMinute)
                                                </MudText>
                                            </MudBadge>
                                        }
                                    </MudStack>
                                </MudStack>
                                <MudStack Row="true" AlignItems="AlignItems.Center">
                                    @{
                                        (string Icon, Color Color) chipAppearance = a.Response switch
                                        {
                                            RsvpResponse.Pending => (Icons.Material.Filled.Pending, Color.Inherit),
                                            RsvpResponse.Accepted => (Icons.Material.Filled.CheckCircle, Color.Success),
                                            RsvpResponse.Declined => (Icons.Material.Filled.Cancel, Color.Error),
                                            RsvpResponse.Maybe => (Icons.Material.Filled.Help, Color.Warning),
                                            _ => throw new ArgumentOutOfRangeException()
                                        };
                                    }
                                    <MudChip T="string"
                                             Icon="@chipAppearance.Icon"
                                             Variant="Variant.Text"
                                             Color="@chipAppearance.Color">
                                        @a.Response.ToString()
                                    </MudChip>
                                    <MudTooltip Text="@(hasComment ? "Comment" : "No Comment")">
                                        <MudIconButton Color="Color.Info"
                                                       Icon="@(hasComment
                                                                 ? CommentVisibility[a.AttendeeId]
                                                                     ? Icons.Material.Filled.Comment
                                                                     : Icons.Material.Outlined.Comment
                                                                 : Icons.Material.Filled.CommentsDisabled)"
                                                       Disabled="@(!hasComment)"
                                                       Size="Size.Small"
                                                       OnClick="@(() => ToggleComment(a.AttendeeId))"/>
                                    </MudTooltip>
                                </MudStack>
                            </MudStack>
                        </MudPaper>

                        @if (hasComment)
                        {
                            <MudCollapse Expanded="@CommentVisibility[a.AttendeeId]">
                                <MudText Class="mx-2 mb-2" Typo="Typo.body2" Align="Align.Justify">@a.Comment</MudText>
                            </MudCollapse>
                        }

                        @if (i + 1 != totalAttendees)
                        {
                            <MudDivider DividerType="DividerType.FullWidth" Class="border-1"/>
                        }
                    }
                </div>
            }
        }
    </DialogContent>
    @* <DialogActions> *@
    @*     <RsvpButton RsvpResponse="RsvpResponse.Pending"/> *@
    @* </DialogActions> *@
</MudDialog>